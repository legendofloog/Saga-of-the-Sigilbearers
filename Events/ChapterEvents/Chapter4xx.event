EventPointerTable(0x21,PointerList) //7 is the ID for prologue events in vanilla FE8

PointerList:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1
POIN $0 $0 $0 
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
Survive(Ch4xxDoneFishing,7)
TurnEventPlayer(19,SecondFishSpawn,3)
END_MAIN

ALIGN 32
CharacterBasedEvents:
END_MAIN

LocationBasedEvents:
House(0,HartnerHouse,10,2)
House(0,LeftHouse,6,4)
House(0,RightHouse,12,5)
House(0,EindrideHouse,9,8)
END_MAIN

MiscBasedEvents:
CauseGameOverIfLordDies
END_MAIN 

Dunno1:
END_MAIN

Dunno2:
END_MAIN 

Dunno3:
END_MAIN 

Tutorial:
END_MAIN

Units1:

UNIT Rune Outcast Rune Level(2,Ally,False) [8,5] 0x0 0x0 0x0 0x1 [IronAxe,HandAxe,Vulnerary] NoAI
UNIT Asgeir AsgeirLord Rune Level(1,Ally,False) [10,5] 0x0 0x0 0x0 0x1 [Glaive,IronLance,Vulnerary] NoAI
UNIT Ragna Shaman_F Rune Level(1,Ally,False) [9,5] 0x0 0x0 0x0 0x1 [Thunder,Flux,Vulnerary] NoAI
UNIT Eimund Warrior Rune Level(1,Ally,False) [8,4] 0x0 0x0 0x0 0x1 [BraveAxe,Thunder,Vulnerary] NoAI
UNIT Ulfr Fighter Rune Level(2,Ally,False) [9,4] 0x0 0x0 0x0 0x1 [IronAxe,Vulnerary] NoAI
UNIT Ivarr Hunter Rune Level(2,Ally,False) [10,4] 0x0 0x0 0x0 0x1 [IronBow,Vulnerary] NoAI
UNIT Brynja SwordKnight Rune Level(9,Ally,False) [8,6] 0x0 0x0 0x0 0x1 [SilverSword,IronSword,Vulnerary] NoAI
UNIT Eimund Myrmidon_F Rune Level(2, Ally, False) [10,6] 0x00 0x00 0x00 0x01 [Shamshir,IronSword,Vulnerary] NoAI
UNIT

EnemyUnits:
UNIT 0x70 Archer 0x00 Level(4,Enemy,True) [17,14] 0x00 0x00 0x0 0x00 [IronLongbow] PursueWithoutHeedAI
UNIT 0x70 Brigand 0x00 Level(4,Enemy,True) [13,9] 0x00 0x00 0x0 0x00 [IronAxe] PursueWithoutHeedAI
UNIT 0x70 Mercenary 0x00 Level(4,Enemy,True) [17,11] 0x00 0x00 0x0 0x00 [SteelSword] PursueWithoutHeedAI
UNIT 0x70 Pirate 0x00 Level(4,Enemy,True) [1,9] 0x00 0x00 0x0 0x00 [IronAxe] PursueWithoutHeedAI
UNIT 0x70 Hunter 0x00 Level(4,Enemy,True) [0,10] 0x00 0x00 0x0 0x00 [IronLongbow] PursueWithoutHeedAI
UNIT 0x70 Lancer 0x00 Level(4,Enemy,True) [6,9] 0x00 0x00 0x0 0x00 [IronLance] PursueWithoutHeedAI
UNIT 0x70 Hunter 0x00 Level(4,Enemy,True) [3,14] 0x00 0x00 0x0 0x00 [IronLongbow] AttackInRangeAI
UNIT 0x70 SwordCav 0x00 Level(4,Enemy,True) [7,13] 0x00 0x00 0x0 0x00 [IronSword] AttackInRangeAI
UNIT 0x70 Pirate 0x00 Level(4,Enemy,True) [4,11] 0x00 0x00 0x0 0x00 [IronAxe] PursueWithoutHeedAI
UNIT 0x70 Pirate 0x00 Level(4,Enemy,True) [12,13] 0x00 0x00 0x0 0x00 [IronAxe] PursueWithoutHeedAI
UNIT

FishGroup1:
UNIT 0x7A Fish 0x00 Level(1,NPC,True) [2,0] 0x00 0x00 0x0 0x00 [0x0] EscapeOnlyAI
UNIT 0x7B Fish 0x00 Level(1,NPC,True) [17,2] 0x00 0x00 0x0 0x00 [0x0] EscapeOnlyAI
UNIT

FishGroup2:
UNIT 0x7C Fish 0x00 Level(1,NPC,True) [2,0] 0x00 0x00 0x0 0x00 [0x0] EscapeOnlyAI
UNIT 0x7D Fish 0x00 Level(1,NPC,True) [17,2] 0x00 0x00 0x0 0x00 [0x0] EscapeOnlyAI
UNIT

Traps1:
ENDTRAP
ALIGN 4

Traps2:
ENDTRAP
ALIGN 4

BeginningScene:
ENUT 0x27
RECLASS Solveig Bow_Dragonrider
RECLASS Eindride LanceCav
SVAL s1 ShoveID
SVAL s2 Eindride
ASMC (ASMC_ForgetSkill|1)
SVAL s2 Solveig
ASMC (ASMC_ForgetSkill|1)
SVAL s1 CantoPlusID
SVAL s2 Eindride
ASMC (ASMC_LearnNewSkill|1)
SVAL s2 Solveig
ASMC (ASMC_LearnNewSkill|1)
SHOWUNIT Asgeir
EVBIT_T 5
TEXTSTART
TEXTSHOW Ch4xxScene1Part1
TEXTEND
TEXTCONT
TEXTEND
REMA
EVBIT_F 5
CHECK_ALIVE Signe
BEQ 21 s0 sC
	Text(Ch4xxScene1Part2SigneAlive)
	GOTO 22
LABEL 21
Text(Ch4xxScene1Part2SigneDead)
LABEL 22
EVBIT_T 5
SetBackground(House1)
Text(Ch4xxScene1Part3)
CALL $9EE2C4
FADI 15
LOAD1 1 EnemyUnits
FADU 5
Text(Ch4xxScene1Part4)
LOAD1 0 Units1
LOAD1 1 FishGroup1
ENUN
PREP
ENDA

SecondFishSpawn:
LOAD1 1 FishGroup2
ENUN
CAMERA 0x7C
STAL 30
CAMERA 0x7D
STAL 30
NoFade
ENDA

Ch4xxDoneFishing:
CALL EndingScene
NoFade
ENDA

HartnerHouse:
CHECK_ACTIVEID Hartner
BEQ 11 s0 sC
	CALL CheckIfFishEvent
	BEQ 12 s0 sC
		ENUT 7
		TILECHANGE 1
		CALL RemoveFishEvent
		CHECK_EVENTID 11 // checks if hartner visited his house and got prf
		BNE 17 s0 sC // skips past this if so
			Text(Chapter4xScene1)  // hartner visits house first time with fish
			ENUT 11
			NoFade
			ENDB
		LABEL 17
		Text(Chapter4xScene1) // hartner visits house some other time with fish
		NoFade
		ENDB
	LABEL 12
	CHECK_EVENTID 11
	BNE 18 s0 sC
		Text(Chapter4xScene1) // if hartner visits without fish once
		ENUT 11
		NoFade
		ENDB
	LABEL 18
	Text(Chapter4xScene1) // if hartner visits without fish again
	NoFade
	ENDB
LABEL 11
CHECK_ACTIVEID Eindride
BEQ 19 s0 sC
	CALL CheckIfFishEvent
	BEQ 20 s0 sC
		ENUT 7
		TILECHANGE 1
		CALL RemoveFishEvent
		Text(Chapter4xScene1)
		NoFade
		ENDB
	LABEL 20
	Text(Chapter4xScene1)
	NoFade
	ENDB
LABEL 19
CALL CheckIfFishEvent
BEQ 13 s0 sC
	ENUT 7
	TILECHANGE 1
	CALL RemoveFishEvent
	Text(Chapter4xScene1)
	NoFade
	ENDB
LABEL 13
Text(Chapter4xScene1)
NoFade
ENDA

LeftHouse:
CALL CheckIfFishEvent
BEQ 1 s0 sC
	ENUT 8
	TILECHANGE 3
	CALL RemoveFishEvent
	Text(Chapter4xScene1)
	NoFade
	ENDB
LABEL 1
Text(Chapter4xScene1)
NoFade
ENDA

RightHouse:
CALL CheckIfFishEvent
BEQ 3 s0 sC
	ENUT 9
	TILECHANGE 5
	CALL RemoveFishEvent
	Text(Chapter4xScene1)
	NoFade
	ENDB
LABEL 3
Text(Chapter4xScene1)
NoFade
ENDA

EindrideHouse:
CHECK_ACTIVEID Eindride
BEQ 4 s0 sC
	CALL CheckIfFishEvent
	BEQ 2 s0 sC
		CALL RemoveFishEvent
		Text(Chapter4xScene1) // event that occurs if eindride brought fish
		ENUT 10
		TILECHANGE 7
		NoFade
		ENDB
	LABEL 2
	Text(Chapter4xScene1)
	NoFade
	ENDB
LABEL 4
CHECK_ACTIVEID Signe
BEQ 23 s0 sC
	CALL CheckIfFishEvent
	BEQ 24 s0 sC
		CALL RemoveFishEvent
		Text(Chapter4xScene1)
		ENUT 10
		TILECHANGE 7
		NoFade
		ENDB
	LABEL 24
	Text(Chapter4xScene1)
	NoFade
	ENDB
LABEL 23
CALL CheckIfFishEvent
BEQ 10 s0 sC
	ENUT 10
	TILECHANGE 7
	CALL RemoveFishEvent // event that occurs if another unit brought fish
	Text(Chapter4xScene1)
	NoFade
	ENDB
LABEL 10
Text(Chapter4xScene1)
NoFade
ENDA

CheckIfFishEvent:
SVAL s1 0xFFFFFFFF
ASMC (ASMC_GetRescuedUnit|1) // checks unit being rescued by active unit
SVAL s1 0x7A
BNE 6 s1 sC
	COUNTER_INC 1 // increments counter used to check if the rescued unit is a fish
	GOTO 5
LABEL 6
SVAL s1 0x7B
BNE 7 s1 sC
	COUNTER_INC 1
	GOTO 5
LABEL 7
SVAL s1 0x7C
BNE 8 s1 sC
	COUNTER_INC 1
	GOTO 5
LABEL 8
SVAL s1 0x7D
BNE 5 s1 sC
	COUNTER_INC 1
LABEL 5
COUNTER_CHECK 1 // checks if rescued unit is a fish
NoFade
ENDA

RemoveFishEvent:
SVAL s1 0x10
UNSET_CONDITION 0xFFFFFFFF // unsets rescuing bit for active unit
COUNTER_INC 0 // increments number of fish given for end event
COUNTER_SET 1 0 // unsets counter used for givingfish event
ENUN
NoFade
ENDA

EndingScene:
COUNTER_CHECK 0
SVAL s1 4 // checks if you got 4 fish
BLE 14 s1 sC // skips if less than 4 fish
	Text(Chapter4xScene1) // gives something if you got 4 fish
	GOTO 16
LABEL 14
SVAL s1 2
BLE 15 s1 sC
	Text(Chapter4xScene1)
	GOTO 16
LABEL 15
Text(Chapter4xScene1)
LABEL 16
MNC2 0x05 // goes to chapter 5
NoFade
ENDA
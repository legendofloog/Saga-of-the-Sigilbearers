EventPointerTable(Chapter7Events,PointerList) //7 is the ID for prologue events in vanilla FE8

PointerList:
POIN TurnBasedEvents
POIN CharacterBasedEvents
POIN LocationBasedEvents
POIN MiscBasedEvents
POIN Dunno1 Dunno2 Dunno3 Tutorial
POIN Traps1 Traps2
POIN Units1 Units1
POIN $0 $0 $0 
POIN $0 $0 $0
POIN BeginningScene EndingScene

TurnBasedEvents:
Survive(Ch4xxDoneFishing,8)
TurnEventPlayer(19,SecondFishSpawn,3)
TurnEventPlayer(20,ThirdFishSpawn,5)
END_MAIN

SecondFishSpawn:
LOAD1 1 FishGroup2
ENUN
CAMERA 0x7C
STAL 30
CAMERA 0x7D
STAL 30
NoFade
ENDA

ThirdFishSpawn:
LOAD1 1 FishGroup3
ENUN
CAMERA 0x7E
STAL 30
CAMERA 0x7F
STAL 30
NoFade
ENDA

Ch4xxDoneFishing:
CALL EndingScene
NoFade
ENDA

ALIGN 32
CharacterBasedEvents:
CharacterEventBothWays(21, ViskardRecruit,0,Viskard)
END_MAIN

ViskardRecruit:
CALL CheckIfFishEvent
BEQ 49 s0 sC
	CALL RemoveFishEvent
	CUSA Viskard
	NoFade
	ENDB
LABEL 49
ENUF 21
NoFade
ENDA

LocationBasedEvents:
House(0,HartnerHouse,6,2)
House(0,LeftHouse,7,6)
House(0,NorthHouse,12,3)
House(0,RightHouse,13,7)
House(0,EindrideHouse,9,10)
END_MAIN

HartnerHouse:
CHECK_ACTIVEID Hartner
BEQ 11 s0 sC
	CALL CheckIfFishEvent
	BEQ 12 s0 sC
		TILECHANGE 1
		CALL RemoveFishEvent
		CHECK_EVENTID 11 // checks if hartner visited his house and got prf
		BNE 17 s0 sC // skips past this if so
			SetBackground(House2)
			Text(Ch4xxHartnerHouse_HartnerFishFirstTimeText)  // hartner visits house first time with fish
			CALL $9EE2C4
			GiveItem(Hartner, FiletKnife)
			ENUT 11
			NoFade
			ENDB
		LABEL 17
		SetBackground(House2)
		Text(Ch4xxHartnerHouse_HartnerFishSecondTimeText) // hartner visits house some other time with fish
		CALL $9EE2C4
		NoFade
		ENDB
	LABEL 12
	CHECK_EVENTID 11
	BNE 18 s0 sC
		SetBackground(House2)
		Text(Ch4xxHartnerHouse_HartnerNoFishFirstTimeText) // if hartner visits without fish once
		CALL $9EE2C4
		GiveItem(Hartner, FiletKnife)
		ENUT 11
		NoFade
		ENDB
	LABEL 18
	SetBackground(House2)
	Text(Ch4xxHartnerHouse_HartnerNoFishSecondTimeText) // if hartner visits without fish again
	CALL $9EE2C4
	NoFade
	ENDB
LABEL 11
CHECK_ACTIVEID Eindride
BEQ 19 s0 sC
	CALL CheckIfFishEvent
	BEQ 20 s0 sC
		TILECHANGE 1
		CALL RemoveFishEvent
		SetBackground(House2)
		Text(Ch4xHartnerHouse_EindrideFishText)
		CALL $9EE2C4
		NoFade
		ENDB
	LABEL 20
	SetBackground(House2)
	Text(Ch4xxHartnerHouse_EindrideNoFishText)
	CALL $9EE2C4
	NoFade
	ENDB
LABEL 19
CALL CheckIfFishEvent
BEQ 13 s0 sC
	TILECHANGE 1
	CALL RemoveFishEvent
	SetBackground(House2)
	Text(Ch4xxHartnerHouseFishText)
	CALL $9EE2C4
	NoFade
	ENDB
LABEL 13
SetBackground(House2)
Text(Ch4xxHartnerHouseNoFishText)
CALL $9EE2C4
NoFade
ENDA

NorthHouse:
CALL CheckIfFishEvent
BEQ 45 s0 sC
	CALL RemoveFishEvent
	TILECHANGE 3
	NoFade
	ENDB
LABEL 45
NoFade
ENDA

LeftHouse:
CALL CheckIfFishEvent
BEQ 1 s0 sC
	CALL RemoveFishEvent
	SetBackground(House1)
	Text(Ch4xxLeftHouseFishText)
	CALL $9EE2C4
	TILECHANGE 5
	NoFade
	ENDB
LABEL 1
SetBackground(House1)
Text(Ch4xxLeftHouseNoFishText)
CALL $9EE2C4
NoFade
ENDA

RightHouse:
CALL CheckIfFishEvent
BEQ 3 s0 sC
	CALL RemoveFishEvent
	SetBackground(House1)
	Text(Ch4xxRightHouseFishText)
	CALL $9EE2C4
	TILECHANGE 7
	NoFade
	ENDB
LABEL 3
SetBackground(House1)
Text(Ch4xxRightHouseNoFishText)
CALL $9EE2C4
NoFade
ENDA

EindrideHouse:
CHECK_ACTIVEID Eindride
BEQ 4 s0 sC
	CALL CheckIfFishEvent
	BEQ 2 s0 sC
		CALL RemoveFishEvent
		SetBackground(House2)
		Text(Ch4xxEindrideHouse_EindrideFishText) // event that occurs if eindride brought fish
		CALL $9EE2C4 
		TILECHANGE 9
		NoFade
		ENDB
	LABEL 2
	SetBackground(House2)
	Text(Ch4xxEindrideHouse_EindrideNoFishText)
	CALL $9EE2C4
	NoFade
	ENDB
LABEL 4
CHECK_ACTIVEID Signe
BEQ 23 s0 sC
	CALL CheckIfFishEvent
	BEQ 24 s0 sC
		CALL RemoveFishEvent
		SetBackground(House2)
		Text(Ch4xxEindrideHouse_SigneFishText)
		CALL $9EE2C4
		TILECHANGE 9
		NoFade
		ENDB
	LABEL 24
	SetBackground(House2)
	Text(Ch4xxEindrideHouse_SigneNoFishText)
	CALL $9EE2C4
	NoFade
	ENDB
LABEL 23
CALL CheckIfFishEvent
BEQ 10 s0 sC
	TILECHANGE 9
	CALL RemoveFishEvent // event that occurs if another unit brought fish
	SetBackground(House2)
	Text(Ch4xxEindrideHouseFishText)
	CALL $9EE2C4
	NoFade
	ENDB
LABEL 10
SetBackground(House2)
Text(Ch4xxEindrideHouseNoFishText)
CALL $9EE2C4
NoFade
ENDA

MiscBasedEvents:
CauseGameOverIfLordDies
END_MAIN

GameOverStart:
ASMC 0x800D391
NoFade
ENDB

Dunno1:
END_MAIN

Dunno2:
END_MAIN 

Dunno3:
END_MAIN 

Tutorial:
END_MAIN

Units1:

UNIT Rune Outcast Rune Level(2,Ally,False) [9,6] 0x0 0x0 0x0 0x1 [IronAxe,HandAxe,Vulnerary] NoAI
UNIT Asgeir AsgeirLord Rune Level(1,Ally,False) [10,6] 0x0 0x0 0x0 0x1 [Glaive,IronLance,Vulnerary] NoAI
UNIT Ragna Shaman_F Rune Level(1,Ally,False) [11,6] 0x0 0x0 0x0 0x1 [Thunder,Flux,Vulnerary] NoAI
UNIT Eimund Warrior Rune Level(1,Ally,False) [9,7] 0x0 0x0 0x0 0x1 [BraveAxe,Thunder,Vulnerary] NoAI
UNIT Ulfr Fighter Rune Level(2,Ally,False) [10,7] 0x0 0x0 0x0 0x1 [IronAxe,Vulnerary] NoAI
UNIT Ivarr Hunter Rune Level(2,Ally,False) [11,7] 0x0 0x0 0x0 0x1 [IronBow,Vulnerary] NoAI
UNIT Brynja SwordKnight Rune Level(9,Ally,False) [9,8] 0x0 0x0 0x0 0x1 [SilverSword,IronSword,Vulnerary] NoAI
UNIT Eimund Myrmidon_F Rune Level(2, Ally, False) [11,8] 0x00 0x00 0x00 0x01 [Shamshir,IronSword,Vulnerary] NoAI
UNIT

EnemyUnits:
UNIT 0x72 Archer 0x00 Level(4,Enemy,True) [15,15] 0x00 0x00 0x0 0x00 [IronLongbow] BossAI
UNIT 0x72 Brigand 0x00 Level(4,Enemy,True) [12,12] 0x00 0x00 0x0 0x00 [IronAxe] AttackThenLootAI
UNIT 0x72 Lancer 0x00 Level(4,Enemy,True) [18,3] 0x00 0x00 0x0 0x00 [IronGreatlance] AttackThenLootAI
UNIT 0x72 Mercenary 0x00 Level(4,Enemy,True) [18,1] 0x00 0x00 0x0 0x00 [SteelSword] AttackThenLootAI
UNIT 0x72 Pirate 0x00 Level(4,Enemy,True) [1,8] 0x00 0x00 0x0 0x00 [IronAxe] AttackThenLootAI
UNIT 0x72 Pirate 0x00 Level(4,Enemy,True) [0,14] 0x00 0x00 0x0 0x00 [IronAxe] AttackThenLootAI
UNIT 0x72 Archer 0x00 Level(4,Enemy,True) [2,12] 0x00 0x00 0x0 0x00 [IronLongbow] BossAI
UNIT 0x72 Hunter 0x00 Level(4,Enemy,True) [10,16] 0x00 0x00 0x0 0x00 [IronLongbow] BossAI
UNIT 0x72 Lancer 0x00 Level(4,Enemy,True) [6,10] 0x00 0x00 0x0 0x00 [IronLance] AttackInRangeAI
UNIT 0x72 Hunter 0x00 Level(4,Enemy,True) [4,15] 0x00 0x00 0x0 0x00 [IronLongbow] BossAI
UNIT 0x72 SwordCav 0x00 Level(4,Enemy,True) [7,15] 0x00 0x00 0x0 0x00 [IronSword] AttackInRangeAI
UNIT 0x72 Pirate 0x00 Level(4,Enemy,True) [3,17] 0x00 0x00 0x0 0x00 [Halberd] AttackThenLootAI
UNIT 0x72 Pirate 0x00 Level(4,Enemy,True) [16,13] 0x00 0x00 0x0 0x00 [IronAxe] AttackThenLootAI
UNIT 0x72 Pirate 0x00 Level(4,Enemy,True) [19,17] 0x00 0x00 0x0 0x00 [IronAxe] AttackThenLootAI
UNIT Viskard Pirate 0x00 Level(4,Enemy,True) [18,2] 0x00 0x00 0x0 0x00 [IronPoleaxe,Vulnerary] AttackInRangeAI
UNIT 0x72 Lancer 0x00 Level(4,Enemy,True) [5,17] 0x00 0x00 0x0 0x00 [KillerLance] AttackInRangeAI
UNIT

FishGroup1:
UNIT 0x7A Fish 0x00 Level(1,NPC,True) [1,0] 0x00 0x00 0x0 0x00 [0x0] EscapeOnlyAI
UNIT 0x7B Fish 0x00 Level(1,NPC,True) [19,5] 0x00 0x00 0x0 0x00 [0x0] EscapeOnlyAI
UNIT

FishGroup2:
UNIT 0x7C Fish 0x00 Level(1,NPC,True) [1,0] 0x00 0x00 0x0 0x00 [0x0] EscapeOnlyAI
UNIT 0x7D Fish 0x00 Level(1,NPC,True) [19,5] 0x00 0x00 0x0 0x00 [0x0] EscapeOnlyAI
UNIT

FishGroup3:
UNIT 0x7E Fish 0x00 Level(1,NPC,True) [1,0] 0x00 0x00 0x0 0x00 [0x0] EscapeOnlyAI
UNIT 0x7F Fish 0x00 Level(1,NPC,True) [19,5] 0x00 0x00 0x0 0x00 [0x0] EscapeOnlyAI
UNIT

Traps1:
ENDTRAP
ALIGN 4

Traps2:
ENDTRAP
ALIGN 4

BeginningScene:
ENUT 0x27
EVBIT_T 5
TEXTSTART
TEXTSHOW Ch4xxScene1Part1
TEXTEND
TEXTCONT
TEXTEND
REMA
EVBIT_F 5
CHECK_ALIVE Signe
BEQ 21 s0 sC
	Text(Ch4xxScene1Part2SigneAlive)
	GOTO 22
LABEL 21
Text(Ch4xxScene1Part2SigneDead)
LABEL 22
EVBIT_T 5
SetBackground(House1)
Text(Ch4xxScene1Part3)
CALL $9EE2C4
FADI 15
LOAD1 1 EnemyUnits
ENUN
FADU 5
Text(Ch4xxScene1Part4)
LOAD1 0 Units1
LOAD1 1 FishGroup1
ENUN
SHOWUNIT Asgeir
ClearFatigue(Eindride)
ClearFatigue(Hartner)
PREP
ENDA

CheckIfFishEvent:
SVAL s1 0xFFFFFFFF
ASMC (ASMC_GetRescuedUnit|1) // checks unit being rescued by active unit
SVAL s1 0x7A
BNE 6 s1 sC
	COUNTER_INC 1 // increments counter used to check if the rescued unit is a fish
	GOTO 5
LABEL 6
SVAL s1 0x7B
BNE 7 s1 sC
	COUNTER_INC 1
	GOTO 5
LABEL 7
SVAL s1 0x7C
BNE 8 s1 sC
	COUNTER_INC 1
	GOTO 5
LABEL 8
SVAL s1 0x7D
BNE 54 s1 sC
	COUNTER_INC 1
	GOTO 5
LABEL 54
SVAL s1 0x7E
BNE 37 s1 sC
	COUNTER_INC 1
	GOTO 5
LABEL 37
SVAL s1 0x7F
BNE 5 s1 sC
	COUNTER_INC 1
LABEL 5
COUNTER_CHECK 1 // checks if rescued unit is a fish
NoFade
ENDA

RemoveFishEvent:
SVAL s1 0x10
UNSET_CONDITION 0xFFFFFFFF // unsets rescuing bit for active unit
COUNTER_INC 0 // increments number of fish given for end event
COUNTER_SET 1 0 // unsets counter used for givingfish event
ENUN
NoFade
ENDA

EndingScene:
CHECK_ALIVE Eindride
SetBackground(Village)
BEQ 16 s0 sC
COUNTER_CHECK 0
SVAL s1 5 // checks if you got 4 fish
BLE 14 s1 sC // skips if less than 4 fish
	Text(Ch4xxEndingSceneAllFishPart1Text) // gives something if you got 4 fish
	GiveItem(HeavyHarpoon, Eindride)
	GOTO 16
LABEL 14
SVAL s1 3
BLE 15 s1 sC
	Text(Ch4xxEndingScenePart1HalfFishText)
	GiveItem(RedGem, Eindride)
	GOTO 16
LABEL 15
Text(Ch4xxEndingScenePart1_LessThanHalfFishText)
LABEL 16
CHECK_ALIVE Signe
BEQ 25 s0 sC
	Text(Ch4xxSigneEndingSceneText)
LABEL 25
CHECK_ALIVE Hartner
BEQ 30 s0 sC
	Text(Ch4xxHartnerEndingSceneText)
LABEL 30
Text(Ch4xxEndingScenePart4Text)
MNC2 0x05 // goes to chapter 5
NoFade
ENDA